---
title: "In-Class_Ex04"
author: "YIN HANG"
date: "`r Sys.Date()`"
format: html
execute: 
  echo: true
  eval: true
  warning: false
editor: visual
---

# Getting Started 

Load the packages

```{r}
pacman::p_load(ggiraph,tidyverse, plotly, DT, ggplotly, patchwork,ggstatsplot, ggside)
```

Data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
show_col_types = FALSE
```

```{r}
plot_ly(data = exam_data, 
             x = ~MATHS, 
             y = ~ENGLISH,
             color = ~RACE, 
             colors = "Set1")
```

Interactive scatter plot

```{r}
p <- ggplot(data=exam_data, 
            aes(x = MATHS,
                y = ENGLISH)) +
  geom_point(dotsize = 1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
ggplotly(p) #<<
```

Combine multiple plots with subplot()

```{r}
p1 <- ggplot(data=exam_data, 
              aes(x = MATHS,
                  y = ENGLISH)) +
  geom_point(size=1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))

p2 <- ggplot(data=exam_data, 
            aes(x = MATHS,
                y = SCIENCE)) +
  geom_point(size=1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
subplot(ggplotly(p1),            #<<
        ggplotly(p2))            #<<
```

# Visual Statistics Analysis with ggstatsplot

One Sample test with **gghistostats()**

```{r}
set.seed(1234)

gghistostats(
  data = exam_data,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```

Two sample mean test using **ggbetweenstats()**

```{r}
ggbetweenstats(
  data = exam_data,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

Significant Test of Correlation

```{r}
ggscatterstats(
  data = exam_data,
  x = MATHS,
  y = ENGLISH,
  marginal = TRUE,
  )
```

# Visualising Models

Load additional packages

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

Read the data file this time using **read_xls(\_)**

Read the *data* tab/ worksheet in the Excel file.

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

Build a multiple linear regression model using **lm()** of Base Stats of R

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

Diagnostic Test of Model

```{r}
check_collinearity(model)
```

Visualise the multicollinearity report

(\<5 no multi-collinearity; \>=10: high multi-collinearity)

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

Check normality assumption using **check_normality()** from **performance** package

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
check_n <- check_normality(model1)
plot(check_n)
```

Check model for homogeneity of variances

```{r}
check_h <- check_heteroscedasticity(model1)
plot(check_h)
```

Complete check model diagnostic

```{r}
check_model(model1)
```

Visualising regression parameters

```{r}
plot(parameters(model1))
```

Using **ggcoefstats()** from **ggstatsplot** package

```{r}
ggcoefstats(model1, 
            output = "plot")
```

# Visualizing the uncertainty

```{r}
pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)
exam <- read_csv("data/Exam_data.csv")
```

Using ggplot2 to save the output as a tibble data

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))
```

```{r}
knitr::kable(head(my_sum), format = 'html')
```

Then visualise standard error of mean maths score by race

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    size=0.5) +
  geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean 
          maths score by rac")
```
